apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'application'
apply plugin: 'checkstyle'

sourceCompatibility = '1.7'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.
mainClassName = "Main"
if (!hasProperty('mainClass')) {
    ext.mainClass = 'Main'
}

repositories {
    mavenCentral()
    // You may define additional repositories, or even remove "mavenCentral()".
    // Read more about repositories here:
    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:repositories
}

dependencies {
    // TODO: Add dependencies here ...
    // You can read more about how to add dependency here:
    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:how_to_declare_your_dependencies
    testImplementation('junit:junit:4.13')
    
}

checkstyle {
    toolVersion = '8.6'
    // checkstyle.xml copy from:
    // https://raw.githubusercontent.com/checkstyle/checkstyle/checkstyle-8.6/src/main/resources/google_checks.xml
    // the version should be as same as plugin version
    configFile = rootProject.file('config/checkstyle/checkstyle.xml')
}

jacoco {
    toolVersion = "0.8.2"
}

jacocoTestReport {

    reports {
        xml.enabled = true
        html.enabled = true
    }
    
    afterEvaluate {
        getClassDirectories().setFrom(classDirectories.files.collect {
                fileTree(dir: it,
                    exclude: ['**/ui/**', '**/main/Main.java'])
            })
    }
}

check.dependsOn jacocoTestReport